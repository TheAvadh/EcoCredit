#variables:
#  BRANCH: main
#  BACKEND: 'src'


#stages:
#  - monitor

#monitor-server-change:
#  stage: monitor
#  trigger:
#    include:
#      - local: '$BACKEND/.gitlab-ci.yml'

variables:
  APP_NAME: ecocredit
  APP_CONTAINER_NAME: ecocredit-backend-app

image: maven:latest

cache:
  paths:
    - "target/"

stages:
  - build
  - test
  - publish
  - deploy

build:
  stage: build
  script:
    - mvn clean package
  artifacts:
    paths:
      - target/*.jar

test:
  stage: test
  script:
    - mvn test

publish:
  stage: publish
  image: docker:latest
  tags:
    - deployment

  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375

  services:
    - docker:dind

  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKHER_HUB_PASS docker.io
    - docker build -t docker.io/$DOCKER_HUB_USER/$APP_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/$DOCKER_HUB_USER/$APP_NAME:$CI_COMMIT_SHORT_SHA

  environment:
    name: dev
  only:
    - dev

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/$DOCKER_HUB_USER/$APP_NAME:$CI_COMMIT_SHORT_SHA"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker stop rm $APP_CONTAINER_NAME"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p $APP_PORT:$APP_PORT --name $APP_CONTAINER_NAME docker.io/$DOCKER_HUB_USER/$APP_NAME:$CI_COMMIT_SHORT_SHA"
